---
import type { GetStaticPathsOptions } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import { getCollection } from "astro:content";
import Pagination from "@components/common/Paginate/Pagination.astro";
import BlogTop from "@components/markdownSet/BlogTop.astro";
import { useTranslations } from "@i18n/util";
import SimpleContainer from '@components/markdownSet/SimpleContainer.astro';
import { LEARN_CATEGORY } from "@/constant";
const t = useTranslations(Astro);
interface Post {
    slug: string;
    body: string;
    collection: string;
    data: {
        title: string;
        description: string;
        date: string;
        keywords?: any[];
    };
}

// 分页数据在page参数中传递
const { page } = Astro.props;

const posts = await getCollection("blog");

const allPages = [...Array(page.lastPage).keys()].map((num) => {
    return `/learn/spring${num === 0 ? "" : `/${String(num + 1)}`}`;
});

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = await getCollection("blog");

    const sortedPosts = posts.sort(
        (a, b) =>
            new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
    );

    const ecosystemPosts = sortedPosts.filter((post) => {
        return post.data.category === "spring";
    });
    return paginate(ecosystemPosts, { pageSize: 9 });
}
---

<BaseLayout title="Nacos Blog">
    <BlogTop 
        title={t("learn.article.spring")} 
        type="learn-sub" 
        source="learn"
        category={LEARN_CATEGORY}
        activeCategory="spring"
    />
    <div 
        class="mx-auto flex flex-col items-center gap-20 py-8 lg:p-12 xl:p-20 bg-error"
    >
        <SimpleContainer 
            pageList={page.data}
            allPages={allPages}
            source="learn"
        />

        <Pagination restRoute allPages={allPages} page={page} class="mx-auto" />
    </div>
</BaseLayout>