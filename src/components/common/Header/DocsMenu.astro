---
import { isChinese } from '@i18n/util';
import { DOCS_ITEM } from "@/constant"

const ifzh = isChinese(Astro);
interface Props {
  items: {
    label: string;
    link?: string;
  }[];
}

const versionList = DOCS_ITEM.map((item)=> item.key)

const getVersion = (pathname) => {
  if (ifzh && !pathname.startsWith('/docs/')) return;
  if (ifzh && pathname.startsWith('/docs/ebook')) return;
  if (!ifzh && !pathname.startsWith('/en/docs/')) return;
  if (!ifzh && pathname.startsWith('/en/docs/ebook')) return;
  const regex = ifzh ? /\/docs\/([^\/]*)/ : /\/en\/docs\/([^\/]*)/;
  const match = pathname.match(regex);
  const result = match?.[1] || '';
  return versionList.includes(result) ? result : versionList[0];
}

const ifactive = (link) => {
  const version = getVersion(link);
  const currentVersion = getVersion(Astro.url.pathname);
  return version === currentVersion;
}

---

<docs-menu class="dropdown-docs block bg-error rounded-lg">
  <ul class="w-[9.25rem] list-none m-0 p-2">
    {
      DOCS_ITEM.map((item) => {
        const { label, link, translations } = item;
        const active = ifactive(ifzh ? link : translations.link);
        return (
          <li class={`no-underline cursor-pointer my-1 rounded-lg ${active ? 'bg-link' : ''} hover:bg-link`}>
            <a 
              href={ifzh ? link : translations.link}
              class="inline-block w-full p-2 no-underline text-inherit text-neutral" 
            >
              {ifzh ? label : item.translations?.en}
            </a>
          </li>
        )
      })
    }
  </ul>
</docs-menu>

