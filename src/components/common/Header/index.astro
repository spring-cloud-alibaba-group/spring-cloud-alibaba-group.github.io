---
import { useTranslations } from "@i18n/util";
import Navbar from "@components/common/Navbar.astro";
import { LanguageToggle } from "@serverless-cd/goat-ui"
import MobileNavbar from "@components/common/MobileNavbar.astro";
import SearchComp from "./searchComp/index.astro";
import { SITE } from "@utils/config";

interface Props {
  align?: "home" | "docs";
  position?: "static" | "sticky";
  lang: "zh-cn" | "en" | string;
}

const t = useTranslations(Astro);
const { align = "home", position = "sticky", lang } = Astro.props;

let height,
  width,
  xpadding = "";
(() => {
  switch (align) {
    case "home":
      height = "4rem";
      width = "85.125rem";
      xpadding = "0";
      return;
    case "docs":
      height = "3.5rem";
      width = "100%";
      xpadding = "1.5rem";
      return;
  }
})();
---

<span class="header-wrapper">
  <my-layout
    style={`position: ${position}; height: ${height}`}
    class="w-full backdrop-blur-md top-0 z-[10] bg-base-100 flex justify-center"
  >
    <!-- 方便控制header宽度 -->
    <div class="header-content flex items-center justify-between">
      <div class="left-content h-full flex flex-1 items-center after:content-[''] after:grow after:invisible">
        <a class="no-underline" href="/">
          <img class="logo" src={SITE.logoUrl} alt=`${SITE.name}-logo` />
        </a>
        <MobileNavbar top={height} class="mobile-navbar h-full ml-4" />
      </div>

      <div class="center-content justify-center flex-2 h-full">
        <Navbar top={height} class="pc-navbar h-full" />
      </div>
  
      <div class="right-content flex flex-1 items-center md:gap-4  before:content-[''] before:grow before:invisible">
        <LanguageToggle id="pc-toggle" lang={lang.toLowerCase()} theme="error"/>
        <!-- <SearchComp /> -->
      </div>
    </div>
    
  </my-layout>
</span>

<script>
  // animation
  let script = document.createElement("script");
  script.src =
    "https://g.alicdn.com/cm-design/mw-vendor/1.6.12/web-animations-next.min.js?spm=defwork.home.0.0.413a5c4bEOqptl&file=web-animations-next.min.js";
  script.onload = function () {
    if (!document.getAnimations) {
      document.getAnimations = window.Element.prototype.getAnimations;
    }
  };
  document.head.appendChild(script);
</script>

<script>
  class HeaderLayout2 extends HTMLElement {
    private ifscroll: boolean;
    constructor() {
      super();
      this.ifscroll = false;
      window.addEventListener("scroll", this.handleScroll);
    }

    handleScroll = () => {
      if (window.innerWidth <= 800) return;
      if (window.scrollY >= 100 && !this.ifscroll) {
        this.ifscroll = true;
        this.classList.add("bg-secondary/[0.84]");
      }
      if (window.scrollY <= 100 && this.ifscroll) {
        this.ifscroll = false;
        this.classList.remove("bg-secondary/[0.84]");
      }
    };
  }
  customElements.define("my-layout", HeaderLayout2);
</script>

<style define:vars={{ width, height, xpadding }} is:global>
  .header-wrapper {
    my-layout {
      --header-content-width: var(--width);
      --logo-height: 1.125rem;
      --header-height: var(--height);
      --header-xl-padding: var(--xpadding);
    }

    .header-content {
      width: var(--header-content-width);
      padding-left: var(--header-xl-padding);
      padding-right: var(--header-xl-padding);
    }

    .left-content .logo {
      vertical-align: sub;
      height: var(--logo-height);
    }

    .left-content .mobile-navbar {
      display: none;
    }

    @media (max-width: 85.125rem) {
      /* 在这里编写屏幕宽度小于85.125rem的CSS样式 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
    }

    @media (max-width: 50rem) {
      /** header 特殊处理 屏幕小于 800px 就显示不完全 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
      .left-content .mobile-navbar {
        display: block;
      }
      .center-content {
        display: none;
      }
      .code-toggle {
        padding: 0 !important;
        background-color: transparent !important;
        span {
          display: none;
        }
        svg {
          width: 1.5rem;
          height: 1.5rem;
        }
      }
    }
  }
</style>
